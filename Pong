# There are two Paddles, which move up and down.
# Paddles canâ€™t go past Horizontal edges of screen.
# Ball starts in center heading towards an edge
# Ball bounce off Paddles and Horizontal screen edges.
# Ball bounces perfectly: angle of incidence == angle of reflection.
# Ball speeds up after each bounce.
# If ball touches either vertical edge. Score is given, ball resets

#-------------------------------------------------------

import pygame

pygame.init()
screen = pygame.display.set_mode((900, 500))
pygame.display.set_caption("Pong")
screen.fill((0,0,0))

#dimensions of screen
width = 900
height = 500

#characteristics of the paddles
pWidth = 20
pHeight = 80
pVel = 10
py =  pHeight/2

p1score = 0
p2score = 0

game = True

#function to quit the window
def end():
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()

#function to write text
def font(size, Text, x, y):
    font = pygame.font.Font("freesansbold.ttf", size)
    text = font.render(Text, True, (255,255,255))
    screen.blit(text, (x, y))
    pygame.display.flip()
    pygame.display.update()

def setup(p1score, p2score, width):
    #draw centre line
    pygame.draw.line(screen, (255,255,255), (width/2, 50), (width/2, 450), width=3)
    #initialising the two scores
    p1score = font(20, "Score: {0}".format(p1score), 20, 20)
    p2score = font(20, "Score: {0}".format(p2score), width-95, 20)

    

#class for each player
class Player:
    def __init__(self, px, py, pWidth, pHeight, pVel):
        self.px = px
        self.py = py
        self.pWidth = pWidth
        self.pHeight = pHeight
        self.pVel = pVel

    #function for the paddles      
    def paddle(self):
        screen.fill((0,0,0))
        pygame.draw.rect(screen, (255,255,255), (self.px, self.py, self.pWidth, self.pHeight))
        pygame.display.update()
        
            
def main():
    #drawing the two separate paddles
    player1 = Player(10, height/2 - pHeight/2, pWidth, pHeight, pVel)
    player2 = Player(width - pWidth - 10, height/2 - pHeight/2, pWidth, pHeight, pVel)
  
    while game == True:
        end()
        keys = pygame.key.get_pressed()
        
        #movements of the paddles separately
        if keys[pygame.K_w] == True and player1.py > player1.pVel:
            player1.py -= 1
        elif keys[pygame.K_s] == True and player1.py < height - player1.pVel - player1.pHeight:
            player1.py += 1
        player1.paddle()
        setup(p1score, p2score, width)
  
        if keys[pygame.K_UP] == True and player2.py > player2.pVel:
            player2.py -= 1
        elif keys[pygame.K_DOWN] == True and player2.py < height - player2.pVel - player2.pHeight:
            player2.py += 1
        player2.paddle()
        setup(p1score, p2score, width)
     
mmain()
