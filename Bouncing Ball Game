###BOUNCING BALL GAME
  ##USING OBJECTIVE POINTS FROM https://www.freecodecamp.org/news/pygame-tutorial-build-a-bouncing-game/

  ##PLATFORM MOVEMENT
    #MOVE LEFT AND RIGHT FROM KEYS
    #CANT MOVE OFF SCREEN
  
  ##BALL BOUNCE
    #BALL BOUNCE OFF WALL AND PLATFORM
    #POINT INCREASE WHEN BOUNCE OFF PLATFORM
  
  ##SCORE SYSTEM
    #SCORE INCREASES AFTER BOUNCE OFF PLATFORM

##-------------------------------------------------------##

###POTENTIAL OTHERS
  ##LEVELS
  ##DYNAMIC PLATFORM COLOUR
  ##LIVES AND GAME OVER
    #RESPAWN BALL LIMITED NUMBER OF TIMES
    #GAME OVER AFTER THAT MANY TIMES
    #RESET SCORE AFTER GAME OVER

##-------------------------------------------------------##

import pygame
import sys

pygame.init()
screen = pygame.display.set_mode((500, 700))
pygame.display.set_caption("Bouncing Ball Game")

#where the platform spawns in
x = 210
y = 600
#sets the size of the platform block
width = 80
height = 20
#the speed of the movement of the platform
vel = 7.5

run = True
while run:
    pygame.time.delay(50)
    for event in pygame.event.get():
        #checks if window closed to allow it to close when cross clicked
        if event.type == pygame.QUIT: 
            run = False
            
    #check if a key is pressed
    keys = pygame.key.get_pressed()
    
    #makes a boundary so platform can't go off screen
    #and makes left and right arrow keys control platform
    if keys[pygame.K_LEFT] and x > vel:
        x -= vel
        
    if keys[pygame.K_RIGHT] and x < 500 - vel - width:
        x += vel


    screen.fill((0,0,0))
    #draws the rectangle of the platform
    pygame.draw.rect(screen, (255,0,0), (x, y, width, height))
    pygame.display.update()

pygame.quit()

